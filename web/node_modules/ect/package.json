{
  "name": "ect",
  "version": "0.3.2",
  "description": "CoffeeScript template engine",
  "keywords": [
    "template",
    "coffeescript"
  ],
  "author": {
    "name": "Vadim M. Baryshev",
    "email": "vadimbaryshev@gmail.com"
  },
  "main": "index",
  "repository": {
    "type": "git",
    "url": "git://github.com/baryshev/ect.git"
  },
  "dependencies": {
    "coffee-script": ">= 1.3.3"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# ECT\n\nCoffeeScript template engine. Backward compatible with [eco](https://github.com/sstephenson/eco).\n\n## Installation\n\n\tnpm install ect\n\n## Features\n\n  * Caching templates\n  * Automatic reloading of changed templates\n  * CoffeeScript code in templates\n  * Supports tag customization\n  * Node.JS and client-side support\n  * Powerful but simple syntax\n  * Inheritance, partials, blocks\n\n## Usage\n\n```js\nvar ECT = require('ect');\n\nvar renderer = ECT({ root : __dirname + '/view', ext : '.ect' });\n\nrenderer.render('page', { title: 'Hello, World!' }, function(error, html) {\n\tconsole.log(error);\n\tconsole.log(html);\n});\n```\n\nYou may use JavaScript object as root.\n\n```js\nvar ECT = require('ect');\n\nvar renderer = ECT({ root : {\n\t\t\t\tlayout: '<html><head><title><%- title %></title></head><body><% content %></body></html>',\n\t\t\t\tpage: '<% extend \"layout\" %><p>Page content</p>'\n\t\t\t\t}\n\t\t\t});\n\nrenderer.render('page', { title: 'Hello, World!' }, function(error, html) {\n\tconsole.log(error);\n\tconsole.log(html);\n});\n```\n\nYou can [play with demo](http://ectjs.com) to check all features.\n\n### With express\n\napp.js\n```js\nvar express = require('express');\nvar app = express();\nvar ECT = require('ect');\nvar ectRenderer = ECT({ cache: true, watch: true, root: __dirname + '/views' });\n\napp.engine('.ect', ectRenderer.render);\n\napp.get('/', function(req, res){\n\tres.render('index.ect');\n});\n\napp.listen(3000);\nconsole.log('Listening on port 3000');\n```\n\nviews/index.ect\n```html\n<% extend 'layout.ect' %>\n<div>Hello, World!</div>\n```\n\nviews/layout.ect\n```html\n<html>\n\t<body>\n\t\t<% content %>\n\t</body>\n</html>\n```\n\n## Syntax\n\n### Unescaped output\n\n```\n<%- someVar %>\n```\n\n### Escaped output\n\n```\n<%= someVar %>\n```\n\n### CoffeeScript code\n\n```\n<% for article in @articles : %>\n\t<% include 'article', article %>\n<% end %>\n```\n\nor\n\n```\n<% if @user?.authenticated : %>\n\t<% include 'partials/user' %>\n<% else : %>\n\t<% include 'partials/auth' %>\n<% end %>\n```\n\n### Inheritance\n\n```\n<% extend 'layout' %>\n```\n\nUse\n\n\n```\n<% content %>\n```\n\nin parent template to define the insertion point.\n\n### Partials\n\n```\n<% include 'partial' %>\n```\n\nYou can redefine data context of partial\n\n```\n<% include 'partial', { customVar: 'Hello, World!' } %>\n```\n\n### Blocks\n\n```\n<% block 'blockName' : %>\n\t<p>This is block content</p>\n<% end %>\n```\n\nUse\n\n\n```\n<% content 'blockName' %>\n```\n\nin parent template to define the insertion point.\n\nBlocks supports more than one level of inheritance and may be redefined.\n\n## Options\n\n  - `root`            Templates root folder or JavaScript object containing templates\n  - `ext`             Extension of templates, defaulting to '' (not used for JavaScript objects as root)\n  - `cache`           Compiled functions are cached, defaulting to true\n  - `watch`           Automatic reloading of changed templates, defaulting to false (useful for debugging with enabled cache, not supported for client-side)\n  - `open`            Open tag, defaulting to '<%'\n  - `close`           Closing tag, defaulting to '%>'\n\n## Client-side support\n\nBasically, include [coffee-script.js](https://github.com/jashkenas/coffee-script/blob/master/extras/coffee-script.js) and [ect.min.js](https://github.com/baryshev/ect/tree/master/ect.min.js) to a page and ect ready to use.\n\n```js\nvar renderer = ECT({ root : 'view' });\n\nrenderer.render('page', { title: 'Hello, World!' }, function(error, html) {\n\tconsole.log(error);\n\tconsole.log(html);\n});\n```\n\nNOTE: root folder must be on the same domain to avoid cross-domain restrictions.\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 Vadim M. Baryshev &lt;vadimbaryshev@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "_id": "ect@0.3.2",
  "_from": "ect"
}
