
path	= require 'path'
fs		= require 'fs'
cluster	= require 'cluster'
lirc	= require '../lirc'

module.exports	=
botnet			= () ->

botnet.bots = {}
botnet.cfg = {
	botsDir: path.join path.dirname( process.mainModule.filename ), '/bots'
}

botnet.spawn = (botPath) ->
	worker = cluster.fork { lirc_botPath: botPath }

	botnet.bots[worker.id] = worker

	if cluster.isMaster
		lirc.parse.bindListeners botnet.mappings.master, worker

botnet.run = (botPath) ->
	if not botPath
		if process.env.lirc_botPath?
			botPath = process.env.lirc_botPath
		else
			return lirc.error 'Error', 'botnet -> bot', 'Cant find bot to run'

	dir = path.join botnet.cfg.botsDir, botPath

	if fs.existsSync dir
		require dir

botnet.send = (obj) ->
	if cluster.isMaster
		for key, worker of botnet.bots
			workerId = obj.workerId.toString() or 0 

			if key isnt workerId
				worker.send obj
	else
		obj.workerId = cluster.worker.id
		process.send obj

botnet.mappings = {
	master: require './mappings/master'
	worker: require './mappings/worker'
}

require './emitter'

if cluster.isWorker
	lirc.parse.bindListeners botnet.mappings.worker, process


lirc.botnet		=
module.exports	= botnet