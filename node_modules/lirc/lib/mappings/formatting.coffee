
lirc = require '../lirc'

###
	One of these will be called (in order) if the msg.cmd
	matches via regexp or a string comparison
###


module.exports				=
lirc.mappings.formatting	= [
	[
		///
			PRIVMSG
		|	BOTMSG
		|	NOTICE
		|	2[56][0-9]
		|	00[1-5]
		|	37[256]
		///
		(msg) ->
			return msg if msg.words.length < 2

			msg.to			= msg.words[0]

			msg.words		= msg.words[1..]
			msg.words[0]	= msg.words[0].replace /^:/, ''
	]
	[
		'PING'
		(msg) ->
			return msg if msg.words.length < 3
			msg.from	= msg.words[0].replace /\:/, ''
			msg.to		= lirc.session.server.user.nick
	]
	[
		'MODE'
		(msg) ->
			return msg if msg.words.length < 2

			msg.to			= msg.words[0]
			msg.modes		= msg.words[1] or ''
			msg.modeArg		= msg.words[2] or ''
	]
	[
		'353'
		(msg) ->
			return msg if msg.words.length < 3
			# unfinished ################################
			msg.users		= msg.users[0].replace /^:/, ''
			msg.to			= msg.words[1]
			msg.users		= msg.words[2..]
	]
	[
		'001'
		(msg) ->
			lirc.session.server.realhost = msg.from
	]
	[
		/.*/ # fallback, always called
		(msg) ->
			return msg
	]
]
