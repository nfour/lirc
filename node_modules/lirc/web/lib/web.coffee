
io		= require 'socket.io'
lirc	= require '../../lib/lirc'
lance	= require 'lance'

{merge, clone} = Object
{type} = Function

defaultCfg = require '../cfg/web'

module.exports	=
web				= (newCfg = {}) ->
	web.cfg = merge merge( {}, defaultCfg ), newCfg

	require './routing'
	web.server = server = lance.createServer()

	server.listen web.cfg.server.port, web.cfg.server.host
	web.io = io = io.listen server, web.cfg.io

	console.log 'Server up,', web.cfg.server.port, web.cfg.server.host

	io.sockets.on 'connection', (socket) ->
		console.log 'Web, new user'

		web.client = socket

		lirc.parse.bindListeners web.mappings.input, socket
	
	lirc.parse.bindListeners web.mappings.output, lirc

	return web

web.start	= web

web.client	=
web.io		=
web.cfg		= undefined

require './emitter'

web.mappings = {}

require './mappings/input'
require './mappings/output'

lance.init require '../cfg/lance'

lance.templating.locals = require '../cfg/site'

lirc.web		=
module.exports	= web